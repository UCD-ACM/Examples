(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     37590,        860]
NotebookOptionsPosition[     28262,        739]
NotebookOutlinePosition[     28754,        757]
CellTagsIndexPosition[     28711,        754]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Principal Component Analysis", "Title",
 CellChangeTimes->{
  3.822567763322839*^9},ExpressionUUID->"36b00004-2e9f-4683-bd9a-\
02dffb644432"],

Cell[CellGroupData[{

Cell["Finding important directions", "Section",
 CellChangeTimes->{{3.821298065639636*^9, 3.8212980721688423`*^9}, {
  3.821989679723143*^9, 3.8219896866761436`*^9}, {3.822567767371812*^9, 
  3.822567772076872*^9}},ExpressionUUID->"cabd6c97-23d4-4ba0-ba7a-\
f45ed6da8c15"],

Cell["\<\
We have seen in the lectures how Principal Component Analysis can be used to \
find the \[OpenCurlyDoubleQuote]most important directions\
\[CloseCurlyDoubleQuote] in data. Let\[CloseCurlyQuote]s try it out with a \
simple 2D dataset that roughly fits on a line:\
\>", "Text",
 CellChangeTimes->{{3.821261714371255*^9, 3.8212617148696632`*^9}, {
  3.8219897689842377`*^9, 
  3.821989831978258*^9}},ExpressionUUID->"13af3e83-451e-4a4e-88d7-\
1000ad6fc587"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"3", "+", 
        RowBox[{"2", "x"}], "+", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "0.6"}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5", ",", "0.005"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",ExpressionUUID->"7346e3e0-0cbc-4890-999f-bd28a5763887"],

Cell["\<\
The first thing to do when trying to understand a new dataset is to try to \
plot is, so first we create a plot of the data above:\
\>", "Text",
 CellChangeTimes->{{3.886136648189185*^9, 
  3.886136686081416*^9}},ExpressionUUID->"b7ba4288-e266-4fbb-a6b5-\
990a912536fd"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}, {
  3.886136760544634*^9, 3.886136761446063*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"79c6a113-88bd-4d5a-b3ea-fa41c399b09d"],

Cell["\<\
In the video lectures we had the matrix of data with rows corresponding to \
the variables and columns corresponding to the samples (measurements of those \
variables). Here, we work with the standard convention in statistics and have \
rows for samples and columns for variables so we will need to keep in mind \
this different convention.\
\>", "Text",
 CellChangeTimes->{{3.821989861059564*^9, 3.821989902750708*^9}, {
  3.821989949165165*^9, 3.8219899504028597`*^9}, {3.821989980794836*^9, 
  3.8219900416739597`*^9}, {3.821993351010601*^9, 
  3.821993451981394*^9}},ExpressionUUID->"bc293daf-5d4d-4a94-acf7-\
b496d1b1e65c"],

Cell["\<\
The first thing we need to do is subtract the mean in each column (i.e. \
standardize the data):\
\>", "Text",
 CellChangeTimes->{{3.821993750747079*^9, 3.821993770478919*^9}, {
  3.82199381826602*^9, 3.8219938229880257`*^9}, {3.821995665341416*^9, 
  3.821995672699621*^9}, {3.8219972361429787`*^9, 
  3.821997236843732*^9}},ExpressionUUID->"b6b26fe8-754b-4b3b-baf8-\
0a7a58ef3b15"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"e0617bea-fd1f-46c1-b9ed-035808765011"],

Cell["Next we compute the singular value decomposition.", "Text",
 CellChangeTimes->{{3.821993897758915*^9, 
  3.821993908180545*^9}},ExpressionUUID->"a30f84de-ae8b-4c7b-97de-\
c819284bd632"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"53c51c2a-5b86-45eb-88ed-58d20b80fb5b"],

Cell["\<\
As expected, we have two singular values, one which is much larger than the \
other. This reflects the fact that there is much more variance along the line \
than orthogonal to it.\
\>", "Text",
 CellChangeTimes->{{3.821993948030292*^9, 
  3.821993987436459*^9}},ExpressionUUID->"11f67241-72b5-4653-a7d1-\
123a18402950"],

Cell["\<\
The singular vectors in the columns of V give us the \
\[OpenCurlyDoubleQuote]most important\[CloseCurlyDoubleQuote] directions in \
the data\
\>", "Text",
 CellChangeTimes->{{3.821994485779088*^9, 
  3.821994532624415*^9}},ExpressionUUID->"41482608-8006-4da5-af59-\
d3259d1e2ef8"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"ea33fd3e-563e-46bf-bd86-df4b35353c85"],

Cell["\<\
The singular vectors in the columns of U give us the projection of the data \
long those \[OpenCurlyDoubleQuote]most important\[CloseCurlyDoubleQuote] \
directions (i.e. the same as standardizedData.V)\
\>", "Text",
 CellChangeTimes->{{3.821994485779088*^9, 3.821994532624415*^9}, {
  3.8219948442301817`*^9, 
  3.8219948898067417`*^9}},ExpressionUUID->"7ba9227e-d85d-4804-9cbc-\
2ad09d70cc6c"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"32e2bf7f-fcd6-4900-a455-16abf67290d5"],

Cell["\<\
We can also directly compute this projected form of the data using \
PrincipalComponents\
\>", "Text",
 CellChangeTimes->{{3.821995944656753*^9, 
  3.821995958522593*^9}},ExpressionUUID->"396910eb-ad24-4c15-a09a-\
fddeef6de798"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"d616fc33-55b3-4210-9db8-26e6a5020e86"],

Cell[CellGroupData[{

Cell["In higher dimensions", "Subsection",
 CellChangeTimes->{{3.821996491584209*^9, 
  3.8219964943847303`*^9}},ExpressionUUID->"69fc2dd0-745f-4871-bc9a-\
569458acaa80"],

Cell["Construct a 3-dimensional dataset with 3 variables:", "Text",
 CellChangeTimes->{{3.821997198806382*^9, 
  3.821997216970263*^9}},ExpressionUUID->"a94eff33-39da-4dcc-9d1f-\
b82c2dcefac9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data3D", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"3", "+", 
        RowBox[{"2", "x"}], "+", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "0.6"}], "]"}], "]"}]}], ",", 
       RowBox[{"7", "+", 
        RowBox[{"4", "x"}], "+", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "6"}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5", ",", "0.005"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.821183512484281*^9, 3.821183542049678*^9}, {
   3.821183580999058*^9, 3.821183586326396*^9}, {3.821183778328753*^9, 
   3.8211837816799097`*^9}, {3.8211838686763353`*^9, 3.821183892990655*^9}, {
   3.821183963150795*^9, 3.82118399538337*^9}, 3.821187466643404*^9, {
   3.821187813843504*^9, 3.8211878280974913`*^9}, {3.821352007799478*^9, 
   3.821352016455101*^9}, {3.821994659350267*^9, 3.8219946846573277`*^9}, {
   3.821995354085598*^9, 3.8219953729139423`*^9}, {3.821995481010845*^9, 
   3.821995510127408*^9}, {3.821995557919126*^9, 3.82199555819276*^9}, {
   3.821995856589182*^9, 3.821995856671425*^9}, {3.821996545507558*^9, 
   3.82199659837794*^9}, {3.8219966288277473`*^9, 3.821996628919792*^9}, {
   3.8219970546053*^9, 3.8219970547506647`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"21308be4-6e24-49e8-86ff-61bcfaf3c267"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"409c108d-7a71-4a2e-a3cf-44047cebccdc"],

Cell["\<\
In this case we choose to standardise by subtracting the mean and dividing by \
the standard deviation:\
\>", "Text",
 CellChangeTimes->{{3.82199724472686*^9, 3.821997266020989*^9}, {
  3.886136733521326*^9, 
  3.8861367413928757`*^9}},ExpressionUUID->"08af93f2-c183-4d1f-b1c9-\
3d5bcd736d65"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"2bf75316-2d34-4972-b033-75c89a5c0d27"],

Cell["Next we compute the singular value decomposition:", "Text",
 CellChangeTimes->{{3.821993897758915*^9, 3.821993908180545*^9}, {
  3.8861367487699013`*^9, 
  3.8861367491469812`*^9}},ExpressionUUID->"34a552b3-4f8c-4508-8b2f-\
8e2c78529bb7"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"a8b777ca-0f42-4192-8200-416d35f2ad86"],

Cell["\<\
As expected, we have two singular values, one which is much larger than the \
other. This reflects the fact that there is much more variance along the line \
than orthogonal to it.\
\>", "Text",
 CellChangeTimes->{{3.821993948030292*^9, 
  3.821993987436459*^9}},ExpressionUUID->"f9b2a820-8642-4251-849c-\
81cf17d9fa5e"],

Cell["\<\
The singular vectors in the columns of V give us the \
\[OpenCurlyDoubleQuote]most important\[CloseCurlyDoubleQuote] directions in \
the data\
\>", "Text",
 CellChangeTimes->{{3.821994485779088*^9, 
  3.821994532624415*^9}},ExpressionUUID->"508072d1-43e3-49ce-9d6c-\
7ead8b87e770"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"4dbe89ef-550d-48ad-a7f8-90c205feaee3"],

Cell["\<\
The singular vectors in the columns of U give us the projection of the data \
long those \[OpenCurlyDoubleQuote]most important\[CloseCurlyDoubleQuote] \
directions (i.e. the same as standardizedData.V)\
\>", "Text",
 CellChangeTimes->{{3.821994485779088*^9, 3.821994532624415*^9}, {
  3.8219948442301817`*^9, 
  3.8219948898067417`*^9}},ExpressionUUID->"8f635ade-7d12-4158-b8aa-\
ddc9a2cb0829"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"9a2d9e7d-2f4b-4eed-9aa7-f2709a576cb0"],

Cell["\<\
We can also directly compute this projected form of the data using \
PrincipalComponents\
\>", "Text",
 CellChangeTimes->{{3.821995944656753*^9, 
  3.821995958522593*^9}},ExpressionUUID->"66f3a089-4904-4909-90ad-\
9febc0488d42"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"326a254b-7141-4fe6-823b-5b395b23d0d1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Identifying types of flower", "Section",
 CellChangeTimes->{{3.8219896645927277`*^9, 3.821989670170643*^9}, {
  3.822026885405249*^9, 
  3.822026891574415*^9}},ExpressionUUID->"ca9dccf1-41f7-4cdc-b990-\
8b7ebf833162"],

Cell["\<\
Let\[CloseCurlyQuote]s now use PCA to identify the type of a flower based on \
measurements of their properties. We will work with a dataset for three \
different types of iris: setosa, versicolor and virginica.\
\>", "Text",
 CellChangeTimes->{{3.821997752460844*^9, 3.821997790446974*^9}, {
  3.8220269051508627`*^9, 3.822026954221487*^9}, {3.8220269986092052`*^9, 
  3.8220270286473017`*^9}},ExpressionUUID->"bb70450c-5a46-4797-bf36-\
7d8933b0ab16"],

Cell[BoxData[
 RowBox[{"WolframAlpha", "[", 
  RowBox[{"\"\<Iris\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Image:PlantData\>\"", ",", "1"}], "}"}], ",", 
     "\"\<Content\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821997923854452*^9, 3.821997927852162*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"b92e7699-fddd-4632-b374-8e1eb9eaf972"],

Cell["\<\
The dataset is available directly through Mathematica and contains 4 \
variables for the length and width of the sepals and petals (in centimeters). \
Let\[CloseCurlyQuote]s load the data:\
\>", "Text",
 CellChangeTimes->{{3.822026962314794*^9, 
  3.822027017761835*^9}},ExpressionUUID->"43058145-d45f-4e6b-b311-\
08fa651cd2f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"iris", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<FisherIris\>\""}], "}"}], 
     ",", " ", "\"\<Data\>\""}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[24]:=",
 CellID->2081614806,ExpressionUUID->"8473f425-589a-42fe-9d04-c73e60320618"],

Cell["Rearrange the data so that it is grouped by species:", "Text",
 CellChangeTimes->{{3.822028287841877*^9, 
  3.8220282970854073`*^9}},ExpressionUUID->"96cdb699-bcd1-411f-9285-\
b738bba0dff8"],

Cell[BoxData[
 RowBox[{"irisbyspecies", "=", 
  RowBox[{"GroupBy", "[", 
   RowBox[{"iris", ",", 
    RowBox[{"Last", "\[Rule]", "First"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8220287940602417`*^9, 3.82202879440374*^9}, 
   3.822028873857771*^9},
 CellLabel->"In[25]:=",
 CellID->1604525905,ExpressionUUID->"11e7f80e-d30f-4b5d-8219-4f07d9bd0fc7"],

Cell["\<\
Let\[CloseCurlyQuote]s first try to plot the data. This is a 4-dimensional \
dataset (one dimension for each variable) so we don\[CloseCurlyQuote]t have \
an easy way to visualise it all. Instead,  just visualise three dimensions by \
dropping one dimension\
\>", "Text",
 CellChangeTimes->{{3.822028428962113*^9, 
  3.822028497848538*^9}},ExpressionUUID->"7b29358f-af96-4a22-8bb7-\
9cdf1aa87643"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"ced1ae2e-d73e-450b-9d4a-fddbe8f939a7"],

Cell["\<\
It looks like there is hope for separating out the species based on their \
properties, but it is difficult working with 4-dimensional data. Instead, let\
\[CloseCurlyQuote]s project it onto the two-dimensional space spanned by the \
first two principal components. We do this as before: standardize the data, \
use the SVD to find the principal components and the projection of the data \
onto those components and then un-standardize the result for plotting.  \
Instead of doing those steps manually again, let\[CloseCurlyQuote]s use \
Mathematica\[CloseCurlyQuote]s DimensionReduction function which does exactly \
that. We tell it to use Principal Component Analysis and to project onto two \
dimensions\
\>", "Text",
 CellChangeTimes->{{3.822028509199498*^9, 
  3.822028719133795*^9}},ExpressionUUID->"21e0cb44-fac9-4a6a-8358-\
4ff2c73bbf20"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"aa1e1c96-574d-4307-9c36-0f72557709a4"],

Cell["\<\
The result is a DimensionReducerFunction which takes in a vector of 4 numbers \
and returns a vector of two numbers obtained by projecting along the two \
principal directions. We now apply this projection function to our iris data\
\>", "Text",
 CellChangeTimes->{{3.822028728499848*^9, 3.822028768968663*^9}, {
  3.82202881732827*^9, 
  3.822028856552979*^9}},ExpressionUUID->"ffa87055-2228-4433-83b7-\
9d4ea8d50eaf"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"8a33176e-abc6-472c-abdf-a6cdb30ca514"],

Cell["\<\
When we plot this lower dimensional representation of the data, we can \
clearly delineate between the species:\
\>", "Text",
 CellChangeTimes->{{3.82202988261653*^9, 
  3.822029905971447*^9}},ExpressionUUID->"5ec87d40-bfd2-4a87-9ad1-\
4c3b80edc70e"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"fab67f70-53ce-4879-ba0e-a8487e98e21c"],

Cell["\<\
We can go even further than this. We have seen how we can use PCA to project \
high-dimensional data onto a lower dimensional surface, but we could also \
reconstruct those projected vectors in the original 4-dimensional space. For \
example, let\[CloseCurlyQuote]s take one sample of the setosa species:\
\>", "Text",
 CellChangeTimes->{{3.822029909269264*^9, 3.8220299157842216`*^9}, {
  3.822030188831064*^9, 3.82203023632477*^9}, {3.822030268053771*^9, 
  3.822030268783704*^9}, {3.822030398771963*^9, 3.822030401340191*^9}, {
  3.8220305784492397`*^9, 3.822030586464943*^9}, {3.822030860774939*^9, 
  3.822030893868408*^9}},ExpressionUUID->"66290fcf-5470-4dc2-a8a7-\
f8c298f121e1"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"4daf4dc9-6c3d-4f8f-911c-49a7db2ae261"],

Cell["We can project this onto the lower-dimensional space:", "Text",
 CellChangeTimes->{{3.82203090988809*^9, 
  3.82203091876994*^9}},ExpressionUUID->"8b968971-c488-4ec3-b76b-\
5c81f91903db"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"d5cfa7ff-341a-424c-a4d8-c0e42e633d21"],

Cell["\<\
Then we can take these principal components and combine them with the \
principal component vectors to reconstruct a 4-vector in the original space. \
This will be the closest point on our lower-dimensional surface to the \
original 4-dimensional sample:\
\>", "Text",
 CellChangeTimes->{{3.822030928011619*^9, 3.822030979441312*^9}, {
   3.822031113458107*^9, 3.822031129756094*^9}, {3.8220311784781427`*^9, 
   3.822031183122361*^9}, {3.822031225153006*^9, 3.822031258526787*^9}, 
   3.822031297032358*^9, {3.822032249364324*^9, 
   3.8220322523225517`*^9}},ExpressionUUID->"8a701d98-f6f5-45f7-bfdf-\
f56a43d7a158"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"06dacb5b-4f50-448e-baaf-0fa693152f0d"],

Cell["\<\
We can do these two steps (projection and reconstruction) in one go by asking \
for the reconstructed vector directly:\
\>", "Text",
 CellChangeTimes->{{3.822031268154028*^9, 
  3.822031295206451*^9}},ExpressionUUID->"8132d46f-5826-4be9-a2fe-\
d58bda9bc7fa"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"c85bb1f2-a6c7-4533-bdef-52fc9c1e948b"],

Cell["Now let\[CloseCurlyQuote]s do this for all sample points and plot the \
result:", "Text",
 CellChangeTimes->{{3.822032352533532*^9, 
  3.8220323686512213`*^9}},ExpressionUUID->"5df37c7b-2870-4e93-91bf-\
e90f2f33e164"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"d2ba4308-127a-48b5-9a81-6bb7e6a1281d"],

Cell["\<\
Finally, we can also use this approach to fill in missing data. For example, \
say we had missed a measurement for our first setosa sample \
\>", "Text",
 CellChangeTimes->{{3.822032432615691*^9, 
  3.822032472408146*^9}},ExpressionUUID->"b81abec2-d724-4338-8f18-\
57aa9ba023b0"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"b9419428-4831-4cef-94a4-5fa630cbb61d"],

Cell["We can still project this onto the lower dimensional space", "Text",
 CellChangeTimes->{{3.822032486555703*^9, 
  3.8220325174698257`*^9}},ExpressionUUID->"0df6ed88-c985-47c1-94e5-\
294a92a2e8e6"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"5f4eafba-c8c4-47b1-b696-717c41b23de6"],

Cell["\<\
And we can reconstruct a 4-dimensional vector from this, \
\[OpenCurlyDoubleQuote]filling in\[CloseCurlyDoubleQuote] the missing  piece:\
\
\>", "Text",
 CellChangeTimes->{{3.822032557580513*^9, 
  3.8220325769620867`*^9}},ExpressionUUID->"b50624bb-f9a5-4e83-acf4-\
7b784f5d5ff3"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"40cc8137-a59f-403d-a555-0a5bf76967e9"],

Cell["\<\
If all we want to do is fill in the missing piece and leave the others \
unchanged, then we could do that too:\
\>", "Text",
 CellChangeTimes->{{3.822032580459586*^9, 
  3.8220325971983843`*^9}},ExpressionUUID->"2481a076-d59d-434e-b1c9-\
f6435968604a"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"39932dc6-e427-44b4-bccb-0a3355f3c027"],

Cell["\<\
We won\[CloseCurlyQuote]t cover this idea further in this module, but this is \
a lot of information about data imputation available online.\
\>", "Text",
 CellChangeTimes->{{3.822032611018156*^9, 3.82203262726687*^9}, {
  3.822032706976388*^9, 
  3.822032723120388*^9}},ExpressionUUID->"328c081d-24c0-4a60-aebd-\
b3890cd63ed1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Handwriting recognition", "Section",
 CellChangeTimes->{{3.821985161740225*^9, 
  3.821985166975065*^9}},ExpressionUUID->"c8917f6b-6a1e-497a-b15a-\
0427e1e9c97a"],

Cell["\<\
We now look at another example: handwriting recognition, and in particular \
reading numbers. The National Institute of Standards and Technology in the US \
have produced a set of 60,000 handwritten numbers collected from Census \
Bureau employees and high school students. Let\[CloseCurlyQuote]s first load \
the dataset (this may take a few seconds to download the first time you run \
it).\
\>", "Text",
 CellChangeTimes->{{3.822029013498911*^9, 3.822029035055365*^9}, {
  3.822032738798958*^9, 3.822032749518331*^9}, {3.822032861665357*^9, 
  3.822032884182498*^9}, {3.822032975517097*^9, 
  3.8220330119261007`*^9}},ExpressionUUID->"3885e468-b429-477d-8207-\
9041991cc8fa"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"ec9232da-4ddf-4da5-9025-922dc110e58a"],

Cell["\<\
This is a list of 60,000 entries, each with an image of a handwritten number \
and the corresponding integer label (as interpreted by a human). Take a \
random sample of 30 entries to get an idea of what they look like\
\>", "Text",
 CellChangeTimes->{{3.8220330577685127`*^9, 
  3.82203317073836*^9}},ExpressionUUID->"77564320-aac7-4fe5-8f92-\
d440acf89c39"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"11ea5897-ecf1-4c43-8d26-9a821e525bd0"],

Cell["Group the entries by the number they represent", "Text",
 CellChangeTimes->{{3.8220332842768097`*^9, 
  3.8220332908888597`*^9}},ExpressionUUID->"3214cc16-f618-4609-a695-\
435f0628a557"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"1f7d524a-ee6c-42c8-b93a-9c608f169b6f"],

Cell["We will just work with the zeros and ones", "Text",
 CellChangeTimes->{{3.822033844510476*^9, 
  3.822033854914041*^9}},ExpressionUUID->"bc99a32a-5644-41e6-adee-\
c0ab8a8a8d9e"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"78ee3606-4651-443b-b001-ea5b356296d6"],

Cell["\<\
If we think of each 28 x 28 image as a 784 dimensional vector, then we can \
consider this as a set of 12,665 samples in a 784 dimensional vector space. A \
random vector in that space won\[CloseCurlyQuote]t look like much, but the \
12,665 samples are special as they represent important \
\[OpenCurlyDoubleQuote]directions\[CloseCurlyDoubleQuote] in this space.\
\>", "Text",
 CellChangeTimes->{{3.8220339465872297`*^9, 3.822034045970973*^9}, {
  3.822034206182135*^9, 
  3.82203421517177*^9}},ExpressionUUID->"9c931891-2f40-4d04-8347-\
bac4654bcd5f"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"88d37475-b8b4-40b9-b4e6-7761977a6ecf"],

Cell["\<\
Let\[CloseCurlyQuote]s see if PCA will allow us to identify the important \
\[OpenCurlyDoubleQuote]directions\[CloseCurlyDoubleQuote] corresponding to \
zeros and ones, and even to differentiate between them. First, let\
\[CloseCurlyQuote]s convert the images to vectors of numbers:\
\>", "Text",
 CellChangeTimes->{{3.822034103846882*^9, 3.822034145617293*^9}, {
  3.822034204498136*^9, 3.822034250339089*^9}, {3.822034284771891*^9, 
  3.822034300001247*^9}},ExpressionUUID->"b1e1e1cd-8c4e-45c3-8230-\
00b8fb25b615"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"6064c8ad-5451-4d92-b067-f01cd0bf154d"],

Cell["\<\
Now that we have a matrix, we can use PCA to reduce the 784 dimensional \
vectors to just the two most important ones\
\>", "Text",
 CellChangeTimes->{{3.822034898781403*^9, 
  3.822034927819832*^9}},ExpressionUUID->"4ae13b15-ade7-4856-a14b-\
119b9900d6cf"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"6cabef6e-17dd-4606-8204-90babb31ce7c"],

Cell["\<\
Now we map our dimension reduction projection function over all of the images \
in our training set\
\>", "Text",
 CellChangeTimes->{{3.822034864953619*^9, 3.822034882829431*^9}, {
  3.822034950832604*^9, 
  3.822034952125383*^9}},ExpressionUUID->"7b6d6713-05c2-44c5-8059-\
f72b253dfa8f"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"4b451c61-0f89-4483-b08c-40a6f154d316"],

Cell["\<\
If we now visualise all of those samples on our two-dimensional space, we can \
quite clearly distinguish between zeros and ones:\
\>", "Text",
 CellChangeTimes->{{3.822035019005986*^9, 
  3.822035041884879*^9}},ExpressionUUID->"d246499a-61cf-4714-8a53-\
a897dd4e5d06"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"d3057073-c90e-4419-b4e8-676cf6587967"],

Cell["\<\
That\[CloseCurlyQuote]s all well and good, but it could be that we have just \
trained our model to understand the images in the training dataset we used. \
What if we were to throw a new, previously unseen image at it? The MNIST \
dataset is separated into training and testing datasets for exactly this \
purpose. Let\[CloseCurlyQuote]s load the test data and see how that fares\
\>", "Text",
 CellChangeTimes->{{3.82203506286215*^9, 
  3.822035160758116*^9}},ExpressionUUID->"50f880f7-6776-417e-bf9c-\
c014e4eb882e"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"6716d019-dc35-4b92-a84c-2a204a10f606"],

Cell["\<\
If we now visualise all of those samples on our two-dimensional space, we can \
quite clearly distinguish between zeros and ones:\
\>", "Text",
 CellChangeTimes->{{3.822035019005986*^9, 
  3.822035041884879*^9}},ExpressionUUID->"d492e42f-3f59-48ff-801c-\
5b64b8458865"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"527c748d-3a0e-48cf-8fc6-84147d4d0c86"],

Cell["\<\
We can also reconstruct what our model thinks a zero and a one look like:\
\>", "Text",
 CellChangeTimes->{{3.822036374555936*^9, 
  3.822036396134006*^9}},ExpressionUUID->"32299fd2-40b3-4170-889c-\
83b99cb84c4f"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"8d0bfce5-2af9-4ca4-9d8b-420fb81239e9"],

Cell["\<\
And we can even use it to fill in missing data, as we did in the iris case:\
\>", "Text",
 CellChangeTimes->{{3.822036399949534*^9, 
  3.822036412391017*^9}},ExpressionUUID->"123254fd-08ec-48ce-bddd-\
63ccf3e9fa10"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.886136610031795*^9, 3.8861366104094563`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"aa5a88fc-5046-49d6-8663-0b1b7558559b"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1108, 625},
WindowMargins->{{Automatic, -26}, {Automatic, 37}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
FrontEndVersion->"13.2 for Mac OS X x86 (64-bit) (January 30, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"cf76fbb4-ce6f-4864-abff-cd231cb58e58"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 147, 3, 98, "Title",ExpressionUUID->"36b00004-2e9f-4683-bd9a-02dffb644432"],
Cell[CellGroupData[{
Cell[752, 29, 272, 4, 67, "Section",ExpressionUUID->"cabd6c97-23d4-4ba0-ba7a-f45ed6da8c15"],
Cell[1027, 35, 464, 9, 58, "Text",ExpressionUUID->"13af3e83-451e-4a4e-88d7-1000ad6fc587"],
Cell[1494, 46, 509, 14, 30, "Input",ExpressionUUID->"7346e3e0-0cbc-4890-999f-bd28a5763887"],
Cell[2006, 62, 280, 6, 35, "Text",ExpressionUUID->"b7ba4288-e266-4fbb-a6b5-990a912536fd"],
Cell[2289, 70, 231, 4, 46, "Input",ExpressionUUID->"79c6a113-88bd-4d5a-b3ea-fa41c399b09d"],
Cell[2523, 76, 638, 11, 81, "Text",ExpressionUUID->"bc293daf-5d4d-4a94-acf7-b496d1b1e65c"],
Cell[3164, 89, 393, 8, 35, "Text",ExpressionUUID->"b6b26fe8-754b-4b3b-baf8-0a7a58ef3b15"],
Cell[3560, 99, 182, 3, 46, "Input",ExpressionUUID->"e0617bea-fd1f-46c1-b9ed-035808765011"],
Cell[3745, 104, 191, 3, 35, "Text",ExpressionUUID->"a30f84de-ae8b-4c7b-97de-c819284bd632"],
Cell[3939, 109, 182, 3, 46, "Input",ExpressionUUID->"53c51c2a-5b86-45eb-88ed-58d20b80fb5b"],
Cell[4124, 114, 330, 7, 58, "Text",ExpressionUUID->"11f67241-72b5-4653-a7d1-123a18402950"],
Cell[4457, 123, 291, 7, 35, "Text",ExpressionUUID->"41482608-8006-4da5-af59-d3259d1e2ef8"],
Cell[4751, 132, 182, 3, 46, "Input",ExpressionUUID->"ea33fd3e-563e-46bf-bd86-df4b35353c85"],
Cell[4936, 137, 404, 8, 35, "Text",ExpressionUUID->"7ba9227e-d85d-4804-9cbc-2ad09d70cc6c"],
Cell[5343, 147, 182, 3, 46, "Input",ExpressionUUID->"32e2bf7f-fcd6-4900-a455-16abf67290d5"],
Cell[5528, 152, 238, 6, 35, "Text",ExpressionUUID->"396910eb-ad24-4c15-a09a-fddeef6de798"],
Cell[5769, 160, 182, 3, 46, "Input",ExpressionUUID->"d616fc33-55b3-4210-9db8-26e6a5020e86"],
Cell[CellGroupData[{
Cell[5976, 167, 170, 3, 54, "Subsection",ExpressionUUID->"69fc2dd0-745f-4871-bc9a-569458acaa80"],
Cell[6149, 172, 193, 3, 35, "Text",ExpressionUUID->"a94eff33-39da-4dcc-9d1f-b82c2dcefac9"],
Cell[6345, 177, 1517, 31, 52, "Input",ExpressionUUID->"21308be4-6e24-49e8-86ff-61bcfaf3c267"],
Cell[7865, 210, 182, 3, 46, "Input",ExpressionUUID->"409c108d-7a71-4a2e-a3cf-44047cebccdc"],
Cell[8050, 215, 303, 7, 35, "Text",ExpressionUUID->"08af93f2-c183-4d1f-b1c9-3d5bcd736d65"],
Cell[8356, 224, 182, 3, 46, "Input",ExpressionUUID->"2bf75316-2d34-4972-b033-75c89a5c0d27"],
Cell[8541, 229, 244, 4, 35, "Text",ExpressionUUID->"34a552b3-4f8c-4508-8b2f-8e2c78529bb7"],
Cell[8788, 235, 182, 3, 46, "Input",ExpressionUUID->"a8b777ca-0f42-4192-8200-416d35f2ad86"],
Cell[8973, 240, 330, 7, 58, "Text",ExpressionUUID->"f9b2a820-8642-4251-849c-81cf17d9fa5e"],
Cell[9306, 249, 291, 7, 35, "Text",ExpressionUUID->"508072d1-43e3-49ce-9d6c-7ead8b87e770"],
Cell[9600, 258, 182, 3, 46, "Input",ExpressionUUID->"4dbe89ef-550d-48ad-a7f8-90c205feaee3"],
Cell[9785, 263, 404, 8, 35, "Text",ExpressionUUID->"8f635ade-7d12-4158-b8aa-ddc9a2cb0829"],
Cell[10192, 273, 182, 3, 46, "Input",ExpressionUUID->"9a2d9e7d-2f4b-4eed-9aa7-f2709a576cb0"],
Cell[10377, 278, 238, 6, 35, "Text",ExpressionUUID->"66f3a089-4904-4909-90ad-9febc0488d42"],
Cell[10618, 286, 182, 3, 46, "Input",ExpressionUUID->"326a254b-7141-4fe6-823b-5b395b23d0d1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10849, 295, 223, 4, 67, "Section",ExpressionUUID->"ca9dccf1-41f7-4cdc-b990-8b7ebf833162"],
Cell[11075, 301, 462, 8, 58, "Text",ExpressionUUID->"bb70450c-5a46-4797-bf36-7d8933b0ab16"],
Cell[11540, 311, 388, 9, 30, "Input",ExpressionUUID->"b92e7699-fddd-4632-b374-8e1eb9eaf972"],
Cell[11931, 322, 338, 7, 58, "Text",ExpressionUUID->"43058145-d45f-4e6b-b311-08fa651cd2f1"],
Cell[12272, 331, 348, 9, 30, "Input",ExpressionUUID->"8473f425-589a-42fe-9d04-c73e60320618",
 CellID->2081614806],
Cell[12623, 342, 196, 3, 35, "Text",ExpressionUUID->"96cdb699-bcd1-411f-9285-b738bba0dff8"],
Cell[12822, 347, 353, 8, 30, "Input",ExpressionUUID->"11e7f80e-d30f-4b5d-8219-4f07d9bd0fc7",
 CellID->1604525905],
Cell[13178, 357, 407, 8, 58, "Text",ExpressionUUID->"7b29358f-af96-4a22-8bb7-9cdf1aa87643"],
Cell[13588, 367, 182, 3, 46, "Input",ExpressionUUID->"ced1ae2e-d73e-450b-9d4a-fddbe8f939a7"],
Cell[13773, 372, 857, 14, 127, "Text",ExpressionUUID->"21e0cb44-fac9-4a6a-8358-4ff2c73bbf20"],
Cell[14633, 388, 182, 3, 46, "Input",ExpressionUUID->"aa1e1c96-574d-4307-9c36-0f72557709a4"],
Cell[14818, 393, 429, 8, 58, "Text",ExpressionUUID->"ffa87055-2228-4433-83b7-9d4ea8d50eaf"],
Cell[15250, 403, 182, 3, 46, "Input",ExpressionUUID->"8a33176e-abc6-472c-abdf-a6cdb30ca514"],
Cell[15435, 408, 260, 6, 35, "Text",ExpressionUUID->"5ec87d40-bfd2-4a87-9ad1-4c3b80edc70e"],
Cell[15698, 416, 182, 3, 46, "Input",ExpressionUUID->"fab67f70-53ce-4879-ba0e-a8487e98e21c"],
Cell[15883, 421, 696, 11, 58, "Text",ExpressionUUID->"66290fcf-5470-4dc2-a8a7-f8c298f121e1"],
Cell[16582, 434, 182, 3, 46, "Input",ExpressionUUID->"4daf4dc9-6c3d-4f8f-911c-49a7db2ae261"],
Cell[16767, 439, 193, 3, 35, "Text",ExpressionUUID->"8b968971-c488-4ec3-b76b-5c81f91903db"],
Cell[16963, 444, 182, 3, 46, "Input",ExpressionUUID->"d5cfa7ff-341a-424c-a4d8-c0e42e633d21"],
Cell[17148, 449, 627, 11, 58, "Text",ExpressionUUID->"8a701d98-f6f5-45f7-bfdf-f56a43d7a158"],
Cell[17778, 462, 182, 3, 46, "Input",ExpressionUUID->"06dacb5b-4f50-448e-baaf-0fa693152f0d"],
Cell[17963, 467, 268, 6, 35, "Text",ExpressionUUID->"8132d46f-5826-4be9-a2fe-d58bda9bc7fa"],
Cell[18234, 475, 182, 3, 46, "Input",ExpressionUUID->"c85bb1f2-a6c7-4533-bdef-52fc9c1e948b"],
Cell[18419, 480, 223, 4, 35, "Text",ExpressionUUID->"5df37c7b-2870-4e93-91bf-e90f2f33e164"],
Cell[18645, 486, 182, 3, 46, "Input",ExpressionUUID->"d2ba4308-127a-48b5-9a81-6bb7e6a1281d"],
Cell[18830, 491, 289, 6, 35, "Text",ExpressionUUID->"b81abec2-d724-4338-8f18-57aa9ba023b0"],
Cell[19122, 499, 182, 3, 46, "Input",ExpressionUUID->"b9419428-4831-4cef-94a4-5fa630cbb61d"],
Cell[19307, 504, 202, 3, 35, "Text",ExpressionUUID->"0df6ed88-c985-47c1-94e5-294a92a2e8e6"],
Cell[19512, 509, 182, 3, 46, "Input",ExpressionUUID->"5f4eafba-c8c4-47b1-b696-717c41b23de6"],
Cell[19697, 514, 290, 7, 35, "Text",ExpressionUUID->"b50624bb-f9a5-4e83-acf4-7b784f5d5ff3"],
Cell[19990, 523, 182, 3, 46, "Input",ExpressionUUID->"40cc8137-a59f-403d-a555-0a5bf76967e9"],
Cell[20175, 528, 262, 6, 35, "Text",ExpressionUUID->"2481a076-d59d-434e-b1c9-f6435968604a"],
Cell[20440, 536, 182, 3, 46, "Input",ExpressionUUID->"39932dc6-e427-44b4-bccb-0a3355f3c027"],
Cell[20625, 541, 338, 7, 35, "Text",ExpressionUUID->"328c081d-24c0-4a60-aebd-b3890cd63ed1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21000, 553, 168, 3, 67, "Section",ExpressionUUID->"c8917f6b-6a1e-497a-b15a-0427e1e9c97a"],
Cell[21171, 558, 688, 12, 81, "Text",ExpressionUUID->"3885e468-b429-477d-8207-9041991cc8fa"],
Cell[21862, 572, 182, 3, 46, "Input",ExpressionUUID->"ec9232da-4ddf-4da5-9025-922dc110e58a"],
Cell[22047, 577, 369, 7, 58, "Text",ExpressionUUID->"77564320-aac7-4fe5-8f92-d440acf89c39"],
Cell[22419, 586, 182, 3, 46, "Input",ExpressionUUID->"11ea5897-ecf1-4c43-8d26-9a821e525bd0"],
Cell[22604, 591, 192, 3, 35, "Text",ExpressionUUID->"3214cc16-f618-4609-a695-435f0628a557"],
Cell[22799, 596, 182, 3, 46, "Input",ExpressionUUID->"1f7d524a-ee6c-42c8-b93a-9c608f169b6f"],
Cell[22984, 601, 183, 3, 35, "Text",ExpressionUUID->"bc99a32a-5644-41e6-adee-c0ab8a8a8d9e"],
Cell[23170, 606, 182, 3, 46, "Input",ExpressionUUID->"78ee3606-4651-443b-b001-ea5b356296d6"],
Cell[23355, 611, 563, 10, 58, "Text",ExpressionUUID->"9c931891-2f40-4d04-8347-bac4654bcd5f"],
Cell[23921, 623, 182, 3, 46, "Input",ExpressionUUID->"88d37475-b8b4-40b9-b4e6-7761977a6ecf"],
Cell[24106, 628, 527, 9, 58, "Text",ExpressionUUID->"b1e1e1cd-8c4e-45c3-8230-00b8fb25b615"],
Cell[24636, 639, 182, 3, 46, "Input",ExpressionUUID->"6064c8ad-5451-4d92-b067-f01cd0bf154d"],
Cell[24821, 644, 267, 6, 35, "Text",ExpressionUUID->"4ae13b15-ade7-4856-a14b-119b9900d6cf"],
Cell[25091, 652, 182, 3, 46, "Input",ExpressionUUID->"6cabef6e-17dd-4606-8204-90babb31ce7c"],
Cell[25276, 657, 298, 7, 35, "Text",ExpressionUUID->"7b6d6713-05c2-44c5-8059-f72b253dfa8f"],
Cell[25577, 666, 182, 3, 46, "Input",ExpressionUUID->"4b451c61-0f89-4483-b08c-40a6f154d316"],
Cell[25762, 671, 279, 6, 35, "Text",ExpressionUUID->"d246499a-61cf-4714-8a53-a897dd4e5d06"],
Cell[26044, 679, 182, 3, 46, "Input",ExpressionUUID->"d3057073-c90e-4419-b4e8-676cf6587967"],
Cell[26229, 684, 529, 9, 81, "Text",ExpressionUUID->"50f880f7-6776-417e-bf9c-c014e4eb882e"],
Cell[26761, 695, 182, 3, 46, "Input",ExpressionUUID->"6716d019-dc35-4b92-a84c-2a204a10f606"],
Cell[26946, 700, 279, 6, 35, "Text",ExpressionUUID->"d492e42f-3f59-48ff-801c-5b64b8458865"],
Cell[27228, 708, 182, 3, 46, "Input",ExpressionUUID->"527c748d-3a0e-48cf-8fc6-84147d4d0c86"],
Cell[27413, 713, 223, 5, 35, "Text",ExpressionUUID->"32299fd2-40b3-4170-889c-83b99cb84c4f"],
Cell[27639, 720, 182, 3, 46, "Input",ExpressionUUID->"8d0bfce5-2af9-4ca4-9d8b-420fb81239e9"],
Cell[27824, 725, 225, 5, 35, "Text",ExpressionUUID->"123254fd-08ec-48ce-bddd-63ccf3e9fa10"],
Cell[28052, 732, 182, 3, 46, "Input",ExpressionUUID->"aa5a88fc-5046-49d6-8663-0b1b7558559b"]
}, Open  ]]
}, Open  ]]
}
]
*)

